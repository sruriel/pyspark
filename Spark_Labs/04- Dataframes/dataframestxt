DataFrames


from pyspark.sql import Row
lista = [('Ankit',25),('Jalfaizy',22),('saurabh',20),('Bala',26)]
rdd = sc.parallelize(lista)
people = rdd.map(lambda x: Row(name=x[0], age=int(x[1])))
schemaPeople = sqlContext.createDataFrame(people)
type(schemaPeople)


schemaPeople.printSchema()
schemaPeople.select("name").collect()

from pyspark.sql import Row
santander = sc.textFile("/user/cloudera/santander/train_ver2.csv").map(lambda x: x.split(","))
data = santander.map(lambda x: Row(fecha_dato=x[0] ,	ncodpers=x[1] ,	ind_empleado=x[2] ,	pais_residencia=x[3] ,	sexo=x[4] ,	age=x[5] ,	fecha_alta=x[6] ,	ind_nuevo=x[7] ,	antiguedad=x[8] ,	indrel=x[9] ,	ult_fec_cli_1t=x[10] ,	indrel_1mes=x[11] ,	tiprel_1mes=x[12] ,	indresi=x[13] ,	indext=x[14] ,	conyuemp=x[15] ,	canal_entrada=x[16] ,	indfall=x[17] ,	tipodom=x[18] ,	cod_prov=x[19] ,	nomprov=x[20] ,	ind_actividad_cliente=x[21] ,	renta=x[22] ,	segmento=x[23]  ))
dfSantander = sqlContext.createDataFrame(data)
type(dfSantander)





Leyendo un Json (Requiere archivo tweet.json)

archivo = sqlContext.read.json("/user/cloudera/tweets/tweet.json")
archivo.printSchema()
archivo.select("user.lang", "user.id_str","text").collect()
salida = archivo.select("user.lang", "user.id_str","text")
salida.saveAsTable("spark_data.tweet_json")


SQLCOntext

from pyspark.sql.functions import col, size
ecobici = sqlContext.sql("SELECT * from spark_data.ecobici")
eco_mujeres = ecobici.where(col("genero_usuario") == "F")
eco_mujeres.saveAsTable("spark_data.ecomujeres")

Generar tabla Hombres